#Задание 1. Создайте массив, который состоит из целых чисел от -50 до 50 включительно. Затем удалите последние 25 элеметов массива. Затем разверните массив. #Добавьте в конец массива 999. Создайте новый массив в который войдут все четные числа из ранее полученного массива и напечатайте его.

mas = list(range(-50, 51))
for i in range(25):
    mas.pop()
mas.reverse()
mas.append(999)
newmas = [i for i in mas if i % 2 == 0]
print(newmas)

#Задание 2. Даны несколько массивов целых чисел (A, B, C, D). Напишите программный код, с помощью которого вы сможете определить длину самой длинной #непрерывной последовательности равных значений для каждого из массивов.

# [1, 1, 1, 2, 3, 4, 5, 6, 3, 4, 1, 1, 1, 1] - самая длинная последовательность длины 4
A = [1] * 20 + [1, 1, 3] * 30 + [1] * 21
​
B = list(range(1, 9, 2)) * 3 + list(range(4, 1, 1)) * 2 + [3] * 3
B.pop()
B.reverse()
B.pop()
B.reverse()
​
C = [b - 2 for b in B]
C.reverse()
C =  A + C
​
D = [777] + [666] + [1,2,1,1] * 2 + [1,1,1,1,3]*3 + [1, 4] * 2
​
def f(A):
    b = 1
    a = 1
    for i in range(len(A) - 1):
        if A[i + 1] == A[i]:
            a += 1
            if b < a:
                b = a
        else:
            a = 1
    return b
print(f(A))
print(f(B))
print(f(C))
print(f(D))

#Задание3. Напишите функцию, которая на вход принимает прямоугольную матрицу и возвращает транспонированную матрицу. Протестируйте функцию на матрицах A, B, C.

A = [[1, 1], [1, 0]]
B = [[2, 3, 4], [4, 5, 6], [7, -1, -2], [-4, -6, 99], [1, 0, 1]]
C = [[1, 2, 3, 4, 5]]
def m(A):
    B=[]
    a = []
    for i in range(0,len(A[0])):
        for j in range(0,len(A)):
            a.append(A[j][i])
            
        B.append(a)
        a = []
    return B
A = [[1, 1], [1, 0]]
B = [[2, 3, 4], [4, 5, 6], [7, -1, -2], [-4, -6, 99], [1, 0, 1]]
C = [[1, 2, 3, 4, 5]]
print(m(A))
print(m(B))
print(m(C))
